hero:
  title: '渐进式 Web 框架'
  description: 使用 Nuxt 创建高质量的 web 应用程序，这是一款开源框架，使得使用 Vue.js 进行全栈开发变得直观。
  cta:
    label: Nuxt UI v3 已发布
    to: /blog/nuxt-ui-v3
    icon: i-lucide-arrow-right
  tabs:
    - title: 最小化
      icon: i-lucide-leaf
      content: |
        ::code-tree{defaultValue="app.vue" class="lg:rounded-r-none lg:border-r-0 dark:[--ui-border-muted:var(--color-gray-800)]"}
        ```vue [app.vue]
        <script setup lang="ts">
        const version = 3
        </script>

        <template>
          <h1>
            Hello Nuxt {{ version }}!
          </h1>
        </template>

        <style scoped>
        h1 {
          font-size: 3rem;
        }
        </style>
        ```

        ```json [package.json]
        {
          "name": "hello-nuxt",
          "private": true,
          "type": "module",
          "scripts": {
            "dev": "nuxt dev",
            "build": "nuxt build",
            "generate": "nuxt generate",
            "preview": "nuxt preview"
          },
          "dependencies": {
            "nuxt": "latest"
          }
        }
        ```
        ::
    - title: 路由
      icon: i-lucide-milestone
      content: |
        ::code-tree{defaultValue="pages/index.vue" class="lg:rounded-r-none lg:border-r-0 dark:[--ui-border-muted:var(--color-gray-800)]"}
        ```vue [app.vue]
        <template>
          <NuxtPage />
        </template>
        ```

        ```json [package.json]
        {
          "name": "nuxt-routing",
          "private": true,
          "type": "module",
          "scripts": {
            "dev": "nuxt dev",
            "build": "nuxt build",
            "generate": "nuxt generate",
            "preview": "nuxt preview"
          },
          "dependencies": {
            "nuxt": "latest"
          }
        }
        ```

        ```vue [pages/index.vue]
        <template>
          <h1>Index page</h1>
          <NuxtLink to="/blog/hello-world">
            Go to blog post
          </NuxtLink>
        </template>
        ```
        ```vue [pages/blog/[slug\\].vue]
        <template>
          <h1>Blog post {{ $route.params.slug }}</h1>
        </template>
        ```
        ::
    - title: 数据获取
      icon: i-lucide-unplug
      content: |
        ::code-tree{defaultValue="pages/index.vue" class="lg:rounded-r-none lg:border-r-0 dark:[--ui-border-muted:var(--color-gray-800)]"}
        ```vue [app.vue]
        <template>
          <NuxtPage />
        </template>
        ```

        ```json [package.json]
        {
          "name": "nuxt-data-fetching",
          "private": true,
          "type": "module",
          "scripts": {
            "dev": "nuxt dev",
            "build": "nuxt build",
            "generate": "nuxt generate",
            "preview": "nuxt preview"
          },
          "dependencies": {
            "nuxt": "latest"
          }
        }
        ```

        ```vue [pages/index.vue]
        <script setup lang="ts">
        const { data } = await useFetch('/api/cms/home')
        </script>

        <template>
          <h1>{{ page.title }}</h1>
          <NuxtLink to="/blog/hello-world">
            Go to blog post
          </NuxtLink>
        </template>
        ```
        ```vue [pages/blog/[slug\\].vue]
        <script setup lang="ts">
          const { slug } = useRoute().params
          const { data: post } = await useFetch(`/api/cms/blog/${slug}`)
        </script>

        <template>
          <h1>{{ post.title }}</h1>
          <NuxtLink to="/">
            Go to home
          </NuxtLink>
        </template>
        ```
        ::
    - title: 自动导入
      icon: i-lucide-wand-sparkles
      content: |
        ::code-tree{defaultValue="app.vue" class="lg:rounded-r-none lg:border-r-0 dark:[--ui-border-muted:var(--color-gray-800)]"}
        ```vue [app.vue]
        <script setup>
        const message = ref('Nuxt')
        const hello = () => sayHello(message.value)
        </script>

        <template>
          <main>
            <h1>Demo with auto imports</h1>
            <form @submit.prevent="hello">
              <MyInput v-model="message" />
              <button type="submit">Say Hello</button>
            </form>
          </main>
        </template>
        ```

        ```vue [components/MyInput.vue]
        <script setup>
        const modelValue = defineModel<string>()
        </script>

        <template>
          <input v-model="modelValue" />
        </template>
        ```
        ```ts [composables/say-hello.ts]
        export function sayHello(message = 'World') {
          alert(`Hello ${upperCase(message)}!`)
        }
        ```

        ```json [package.json]
        {
          "name": "hello-nuxt",
          "private": true,
          "type": "module",
          "scripts": {
            "dev": "nuxt dev",
            "build": "nuxt build",
            "generate": "nuxt generate",
            "preview": "nuxt preview"
          },
          "dependencies": {
            "nuxt": "latest"
          }
        }
        ```
        ::
    - title: API 路由
      icon: i-lucide-pc-case
      content: |
        ::code-tree{defaultValue="server/api/hello.ts" class="lg:rounded-r-none lg:border-r-0 dark:[--ui-border-muted:var(--color-gray-800)]"}
        ```vue [app.vue]
        <template>
          <NuxtPage />
        </template>
        ```

        ```json [package.json]
        {
          "name": "nuxt-data-fetching",
          "private": true,
          "type": "module",
          "scripts": {
            "dev": "nuxt dev",
            "build": "nuxt build",
            "generate": "nuxt generate",
            "preview": "nuxt preview"
          },
          "dependencies": {
            "nuxt": "latest"
          }
        }
        ```

        ```vue [pages/index.vue]
        <script setup lang="ts">
        const { data } = await useFetch('/api/hello')
        </script>

        <template>
          <h1>{{ data.message }}</h1>
        </template>
        ```

        ```ts [server/api/hello.ts]
        export default defineEventHandler((event) => {
          return {
            message: 'Hello World'
          }
        })
        ```
        ::
logos:
  title: 全球领先企业共同选择
  companies:
    - light: /assets/brands/light/fielmann.svg
      dark: /assets/brands/dark/fielmann.svg
      alt: Fielmann
      height: 28
      width: 89
    - light: /assets/brands/light/dassault-systemes.svg
      dark: /assets/brands/dark/dassault-systemes.svg
      alt: Dassault Systemes
      height: 28
      width: 93
    - light: /assets/brands/light/louis-vuitton.svg
      dark: /assets/brands/dark/louis-vuitton.svg
      alt: Louis Vuitton
      height: 16
      width: 152
    - light: /assets/brands/light/backmarket.svg
      dark: /assets/brands/dark/backmarket.svg
      alt: Back Market
      height: 18
      width: 161
    - light: /assets/brands/light/paul-smith.svg
      dark: /assets/brands/dark/paul-smith.svg
      alt: Paul Smith
      height: 26
      width: 144
    - light: /assets/brands/light/caudalie.svg
      dark: /assets/brands/dark/caudalie.svg
      alt: Caudalie
      height: 28
      width: 136
    - light: /assets/brands/light/blizzard.svg
      dark: /assets/brands/dark/blizzard.svg
      alt: Blizzard
      height: 28
      width: 55
    - light: /assets/brands/light/too-good-to-go.svg
      dark: /assets/brands/dark/too-good-to-go.svg
      alt: To Good to Go
      height: 40
      width: 51
features:
  title: 随着您的成长启用功能
  description: Nuxt 随着您的需求增长和适应，同时提供卓越的开发者体验。从简单的登录页面到适合数百名开发者团队的复杂 web 应用程序，您可以构建任何东西。我们设计 Nuxt 使其对所有技能水平的开发者都易于接近。
  features:
    - icon: i-lucide-sparkles
      title: 零配置
      description: 立即开始使用 Vue 或 TypeScript 编码 —— Nuxt 为您处理所有设置。
    - icon: i-lucide-file-code-2
      title: 渲染模式
      description: 服务端渲染、客户端渲染、静态网站生成，任您选择，甚至可以精确到页面级别。
    - icon: i-lucide-milestone
      title: 路由与布局
      description: 使用基于文件的路由系统构建复杂的基于 URL 的视图，同时复用组件以提升性能。
    - icon: i-lucide-unplug
      title: 数据获取
      description: 让您的 Vue 组件支持异步操作并等待数据。Nuxt 提供强大的组合函数用于通用数据获取。
    - icon: i-lucide-bug
      title: 错误处理
      description: 使用内置的错误处理程序和自定义错误页面捕获应用程序中的错误。
    - icon: i-lucide-flip-horizontal
      title: 过渡效果
      description: 在布局、页面和组件之间实现平滑过渡效果。
    - icon: i-lucide-image
      title: 资源与样式
      description: 通过内置支持，实现图像、字体和脚本的自动优化。
    - icon: i-lucide-file-search
      title: SEO 与元标签
      description: 创建能够被搜索引擎完全索引的生产级应用程序。
    - icon: i-lucide-puzzle
      title: 模块化
      description: 通过 200+ 个模块扩展 Nuxt 功能，加快应用程序交付速度。
    - icon: i-lucide-shield-check
      title: 中间件
      description: 在页面渲染之前保护或添加自定义逻辑（本地化、A/B 测试）。
    - icon: i-simple-icons-typescript
      title: TypeScript 类型安全
      description: 使用自动生成的类型和 tsconfig.json 编写类型安全的代码。
  cta:
    title: '深入了解 Nuxt'
    label: 开始阅读文档
    to: /docs
    icon: i-lucide-arrow-right
foundation:
  title: 构建在坚实的基础之上
  description: Nuxt 构建在坚如磐石的开源技术之上，具备在不同构建工具之间进行选择的多样性。
  items:
    - id: vue
      title: 使用 Vue.js 构建前端
      description: Nuxt 基于 Vue.js 构建，利用其响应式、基于组件的架构，创建功能强大、可扩展且无缝的 web 应用程序。
      logo: i-custom-vue
      color: '#42B883'
      gradient: 'bg-gradient-to-br from-[#42B883]/10 from-5% via-transparent via-50% to-transparent'
      link:
        label: vuejs.org
        to: https://vuejs.org
    - id: bundler
      title: 使用 Vite 进行打包
      description: Nuxt 利用 Vite 的前端构建能力，通过即时 HMR 提供最佳开发体验，支持快速开发 web 应用程序。
      logo: i-custom-vite
      color: '#A156FE'
      gradient: 'bg-gradient-to-br from-[#A156FE]/10 from-5% via-transparent via-50% to-transparent'
      link:
        label: vite.dev
        to: https://vite.dev
    - id: bundler
      title: 使用 Webpack 进行打包
      description: Nuxt 利用 Webpack 强大的打包和优化能力，确保稳定且可扩展的开发体验。
      logo: i-custom-webpack
      color: '#8ED6FB'
      gradient: 'bg-gradient-to-br from-[#8ED6FB]/10 from-5% via-transparent via-50% to-transparent'
      link:
        label: webpack.js.org
        to: https://webpack.js.org
    - id: bundler
      title: 使用 Rspack 进行打包
      description: Nuxt 集成 Rspack 的高性能打包，加速构建和 HMR，实现大规模开发的流畅体验。
      logo: i-custom-rspack
      color: '#F93920'
      gradient: 'bg-gradient-to-br from-[#F93920]/10 from-5% via-transparent via-50% to-transparent'
      link:
        label: rspack.dev
        to: https://rspack.dev
    - id: nitro
      title: 使用 Nitro 作为服务器
      description: Nuxt 使用 Nitro 作为服务器引擎，构建多功能全栈 web 应用程序，随时准备部署到任何平台。
      logo: i-custom-nitro
      color: '#FB848E'
      gradient: 'bg-gradient-to-br from-[#FB848E]/10 from-5% via-transparent via-50% to-transparent'
      link:
        label: nitro.build
        to: https://nitro.build
modules:
  title: 使用插件和模块扩展 Nuxt
  description: Nuxt 拥有丰富的模块生态系统，包括官方和社区驱动的模块。这通过提供现成的解决方案来加速开发，以满足常见需求。
  links:
    - label: 浏览所有模块
      to: /modules
      icon: i-lucide-arrow-right
      color: neutral
      trailing: true
testimonial:
  quote: "Nuxt 提供了一个引人注目的解决方案和一个出色的生态系统，帮助您快速构建高性能且 SEO 友好的全栈 Vue 应用。能够在 SSR 和 SSG 之间自由选择更是锦上添花。"
  author:
    name: '尤雨溪'
    description: 'Vue.js 和 Vite 的创建者'
    to: 'https://x.com/evanyou'
    avatar:
      src: 'https://avatar.ikxin.com/github/yyx990803?size=40'
      srcset: 'https://avatar.ikxin.com/github/yyx990803?size=80 2x'
      provider: 'ipx'
deploy:
  title: 随时随地部署您的应用
  description: 一键部署和零配置选项使您的 Nuxt 应用轻松上线。选择您的平台，Nuxt 会处理其余工作，让您专注于构建优秀的应用程序，而不是管理复杂的部署过程。
  links:
    - label: 立即了解如何部署
      to: /deploy
      icon: i-lucide-arrow-right
      color: neutral
      trailing: true
stats:
  title: 开发者的简单而强大的 Web 应用之选
  description: |
    Nuxt 诞生于开发者提升生产力和平台性能的需求。最初是一个基于 Vue 的任务自动化和服务端渲染解决方案，如今已被全球众多初创公司和企业所信赖。
  community:
    title: 开源
    description: Nuxt 框架 100% 完全由充满热情的开源社区驱动。Nuxt 框架中的每一行代码都由像您这样的热情社区开发者编写。
  x: 98.7k
  discord: 28k
  cta:
    label: 开始贡献
    to: 'https://github.com/nuxt/nuxt'
    color: neutral
    variant: outline
    icon: i-simple-icons-github
    trailing: true
contributors:
  title: '由全球开发者构建'
  description: 'Nuxt 及其生态系统的开发由国际团队领导。从贡献者到开发者宣传员，社区成员拥有不同的背景和技能。我们每天都欢迎新成员，并鼓励任何人以多种方式加入我们：解答问题、演讲、创建模块和贡献核心代码。'
  links:
    - label: Nuxters
      to: https://nuxters.nuxt.com
      target: _blank
      icon: i-simple-icons-nuxtdotjs
      color: neutral
      title: 在 Nuxters 上查看您的个人资料
    - icon: i-simple-icons-discord
      to: https://go.nuxt.com/discord
      target: _blank
      color: neutral
      variant: ghost
      size: xl
      title: 加入 Nuxt Discord 社区
    - icon: i-simple-icons-x
      to: https://go.nuxt.com/x
      target: _blank
      color: neutral
      variant: ghost
      size: lg
      title: Nuxt 在 X 平台
    - icon: i-simple-icons-bluesky
      to: https://go.nuxt.com/bluesky
      target: _blank
      color: neutral
      variant: ghost
      size: lg
      title: Nuxt 在 Bluesky 平台
support:
  title: Nuxt 企业支持
  description: |
    为了确保您的 Nuxt 项目充分发挥潜力，我们的 Nuxt 专家团队拥有 :icon{name=i-custom-vue .align-middle} Vue、 :icon{name=i-custom-nuxt .align-middle} Nuxt 和 :icon{name=i-custom-vite .align-middle} Vite 的核心贡献者提供全面的服务套件。
  features:
    - title: 性能优化
      description: 通过专家优化，提升 Nuxt 可靠性。
      icon: i-lucide-rocket
    - title: 迁移到 Nuxt
      description: 从起步到部署，确保顺利无痛的迁移。
      icon: i-lucide-circle-arrow-up
    - title: Nuxt 研讨会
      description: 通过培训和支持，培养专家团队。
      icon: i-lucide-school
  companies:
    - src: /assets/enterprise/support/malt.svg
      alt: Malt
    - src: /assets/enterprise/support/zadig-and-voltaire.svg
      alt: Zadig & Voltaire
    - src: /assets/enterprise/support/adyen.svg
      alt: Adyen
    - src: /assets/enterprise/support/world-wide-technology.svg
      alt: World Wide Technology
    - src: /assets/enterprise/support/cora.svg
      alt: Cora
  links:
    - label: 联系 Nuxt 专家
      to: /enterprise/support
      icon: i-lucide-arrow-right
      color: neutral
      trailing: true
sponsors:
  title: 赞助商
  description: 感谢我们的贡献者和赞助商，Nuxt 在 MIT 许可下始终保持免费和开源。
  links:
    - label: 成为赞助商
      to: 'https://github.com/sponsors/nuxt'
      color: neutral
      trailingIcon: i-lucide-heart
      trailing: true
    - label: 查看所有赞助商
      to: /enterprise/sponsors
      color: neutral
      variant: outline
