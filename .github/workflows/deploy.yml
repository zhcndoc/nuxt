name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          build-args: |
            NUXT_GITHUB_TOKEN=${{ secrets.NUXT_GITHUB_TOKEN }}
            NUXT_UI_PRO_LICENSE=${{ secrets.NUXT_UI_PRO_LICENSE }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
          push: true

  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 22

  #     - name: Build project
  #       env:
  #         NUXT_GITHUB_TOKEN: ${{ secrets.NUXT_GITHUB_TOKEN }}
  #         NUXT_UI_PRO_LICENSE: ${{ secrets.NUXT_UI_PRO_LICENSE }}
  #       run: |
  #         npm install -g --force corepack
  #         corepack enable
  #         pnpm install --frozen-lockfile
  #         pnpm run generate

  #     - name: Upload build artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: build-artifact
  #         path: .output/public

  # deploy-to-server:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download build artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build-artifact

  #     - name: Deploy to Server
  #       uses: easingthemes/ssh-deploy@main
  #       with:
  #         REMOTE_HOST: ${{ secrets.SERVER_HOST }}
  #         REMOTE_PORT: ${{ secrets.SERVER_PORT }}
  #         REMOTE_USER: ${{ secrets.SERVER_USER }}
  #         SSH_PRIVATE_KEY: ${{ secrets.SERVER_KEY }}
  #         SOURCE: "."
  #         ARGS: "-azr --delete"
  #         TARGET: "${{ secrets.SERVER_PATH }}/nuxt/"
